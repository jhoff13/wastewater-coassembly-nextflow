/************************************************
| CONFIGURATION FILE FOR ASSEMBLY ONLY WORKFLOW |
************************************************/

/*************
| PARAMETERS |
*************/
params{
    // Reference directories
    s3_dir = "s3://nao-jhoff/rothman_test_assembly/coassembly_test_1"
    pub_dir = "${params.s3_dir}/output" // "${projectDir}/output" // Publication directory
    raw_dir = "s3://nao-mgs-workflow-scratch/Rothman-PRJNA729801/output-unenriched/preprocess/ribo_initial/" //ribo1 read directory
    script_dir = "${projectDir}/scripts" // Directory containing built-in scripts

    // Path to TSV specifying sample/library configuration
    library_tab = "${projectDir}/ref/libraries.csv"

    //process parameters
    metaspades {
    k = "21,33,55,77,99,127"
    run = true
    }
    megahit {
    k = "21,33,55,77,99,127"
    run = true
    }
}

workDir = "${params.s3_dir}/work" // "${projectDir}/work"

/********************
| AWS CONFIGURATION |
********************/

aws {
    client {
        maxConnections = 1000
        maxErrorRetry = 10
        connectionTimeout = 0
        socketTimeout = 0
    }
}

docker {
    enabled = true
}

fusion {
    enabled = true // Change to true for workding directories on s3
    exportStorageCredentials = true
}

wave {
    enabled = true
}

/*************************
| PROCESS SPECIFICATIONS |
*************************/

process {
    errorStrategy = "finish" // When a process fails, finish other pending jobs before shutdown

    // Single-core processes
    withLabel: 'single' {
        cpus = 1
        memory = 1.GB
    }

    // Small multi-core processes
    withLabel: 'small' {
        cpus = 7
        memory = 15.GB
    }

    // Large multi-core processes - can run 2 large at once
    withLabel: 'large' {
        cpus = 15
        memory = 31.GB //64 gigs total (minus)
    }

    // Maximum-scope, one-at-a-time processes
    withLabel: 'max' {
        cpus = 31
        memory = 61.GB
    }

    // Docker images
    withLabel: 'base' {
        container = "amazonlinux:latest"
    }
    withLabel: 'metaspades' {
        container = "staphb/spades:latest"
    }
    withLabel: 'megahit' {
        container = "nanozoo/megahit:latest"
    }
    withLabel: 'quast' {
        container = "staphb/quast:latest"
    }
    withLabel: pandas {
        container = "pandas/pandas:pip-all"
    }
//    withLabel: 'python' {
//        container = "python:3.9"
//    }
}
